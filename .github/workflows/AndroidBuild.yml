name: AndroidBuild

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout
        uses: actions/checkout@v4.2.2

      # Step 2: Set up Google services JSON
      - name: Set up Google services JSON
        run: echo "$SERVICE_JSON" > $GITHUB_WORKSPACE/app/google-services.json
        env:
          SERVICE_JSON: ${{ secrets.SERVICE_JSON }}

      # Step 3: Debug Google services JSON
      - name: Debug Google services JSON
        run: cat $GITHUB_WORKSPACE/app/google-services.json

     # Step 5: Cache Gradle Build Cache


      # Step 4: Set execute permission for gradlew
      - name: Set execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Cache Gradle build cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-build-cache-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-build-cache-



      # Step 5: Set up Java JDK
      - name: Setup Java JDK
        uses: actions/setup-java@v4.5.0
        with:
          distribution: 'temurin' # You can also use 'zulu', 'adopt', etc.
          java-version: '17'

      # Step 6: Decrypt and set up the release keystore
      - name: Decrypt release keystore
        run: |
          mkdir -p $HOME/.android
          echo "${{ secrets.MY_RELEASE_BASE_64 }}" | base64 --decode > $HOME/.android/release.keystore

      # Step 7: Build the release APK
      - name: Build Release APK
        run: |
          ./gradlew assembleRelease -Pandroid.injected.signing.store.file=$HOME/.android/release.keystore \
            -Pandroid.injected.signing.store.password=${{ secrets.RELEASE_KEYSTORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.RELEASE_KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.RELEASE_KEY_PASSWORD }}

      # Step 8: Upload the release APK as a build artifact
      - name: Upload Release APK
        uses: actions/upload-artifact@v4.4.3
        with:
          name: AISplitWise-Release.apk
          path: app/build/outputs/apk/release/app-release.apk


